version: "3.9"
services:
  server:
    build: .
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/src
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://admin:password@postgres:5432/datastore_db
      CELERY_BROKER_URL: redis://redis:6379
      CELERY_RESULT_BACKEND: redis://redis:6379
      HOST_URL: http://locahost:8000
  celery_worker:
    build: .
    command: bash -c "celery -A datastore worker -l INFO"
    depends_on:
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://admin:password@postgres:5432/datastore_db
      CELERY_BROKER_URL: redis://redis:6379
      CELERY_RESULT_BACKEND: redis://redis:6379
      HOST_URL: http://locahost:8000
  tests:
    build: .
    command: bash -c "python manage.py test"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://admin:password@postgres:5432/datastore_db
      CELERY_BROKER_URL: redis://redis:6379
      CELERY_RESULT_BACKEND: redis://redis:6379
      HOST_URL: http://locahost:8000
  postgres:
    image: postgres:11
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: datastore_db
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "datastore_db", "-U", "admin"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
  redis:
    image: redis:6.2
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
volumes:
  postgres-data:
